name: Build ASP Net Container

on:
  push:
    branches: [ "dev", "8-setup-azure-resources-and-cicd" ]
  pull_request:
    branches: [ "dev" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  IMAGE_NAME: aspnet_image
jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
  

    steps:
      #Check out repo
      - name: Checkout repository
        uses: actions/checkout@v3
      
      #Setup up environment
      - name: Setup Dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '7.x.x'
      
      #Restore Dependencies
      # - name: Restore Dependencies
      #   run: nuget restore ./VCASoftware.Evaluation.AspNet/VCASoftware.Evaluation.AspNet.sln

      # - name: Dotnet Build
      #   run: dotnet build ./VCASoftware.Evaluation.AspNet/VCASoftware.Evaluation.AspNet.sln

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: | 
            github.event_name != 'pull_request'
        
        uses: sigstore/cosign-installer@6e04d228eb30da1757ee4e1dd75a0ec73a653e06 #v3.1.1
        with:
          cosign-release: 'v2.1.1'

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        if: | 
            github.event_name != 'pull_request'
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: | 
            github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}        

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      # - name: Build and push Docker image - ASP AspNet
      #   if: | 
      #       github.event_name != 'pull_request'
      #   id: build-and-push
      #   uses: mr-smithers-excellent/docker-build-push@v5
      #   with:
      #     image: 'aspnet_image'
      #     registry: ${{ env.REGISTRY }}
      #     dockerfile: ./VCASoftware.Evaluation.AspNet/Dockerfile
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}
      #     tags: latest


      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        if: | 
            github.event_name != 'pull_request'
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        if: | 
            github.event_name != 'pull_request'
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: ./VCASoftware.Evaluation.AspNet
          push: ${{ github.event_name != 'pull_request' }}
          tags: alcantaramarkjohn/aspnet_image:latest     

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        if: | 
            github.event_name != 'pull_request'
        env:
          # https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-an-intermediate-environment-variable
          TAGS: latest
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}

          #Azure Login
      - name: Log in to Azure
        if: | 
          github.event_name != 'pull_request'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      #Deploy Container to Azure
      #enable
      - name: Build and deploy Container App
        if: | 
          github.event_name != 'pull_request'
        uses: azure/container-apps-deploy-action@v1
        with:
          imageToDeploy: ghcr.io/alcantaramark/aspnet_image:latest
          containerAppName: vcasoftware-test-aspnet
          resourceGroup: vcasoftware-test
    
